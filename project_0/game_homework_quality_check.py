#Проверка Качества для алгоритма (среднее количество попыток за 1000 решений)
#Disclaimer: по PEP8 все аннотации должны быть на англ, но так как это учебный курс, делаю сноску что все комментарии будут на русском.

import numpy as np

#мы можем задать любой диапазон чисел (не только от 1 до 100)
num_start = 1 # число "от"
num_stop = 101 # число "до" (не включительно)

#рандит в зависимости от условий (по условию домашней работы от 1 до 100)
number = np.random.randint(num_start, num_stop) # программа загадывает псевдослучайное число

#функция по угадыванию числа
def guess_number(number, num_start, num_stop):
  count = 0 #счетчик попыток
  low = num_start  # переменная на нижнюю границу
  high = num_stop - 1  # переменная на верхнюю границу

  while True:
    count += 1
    predict_number = (low + high) // 2  #по умолчанию програма будет начинать с середины данного промежутка
    #программа будет уменьшать промежуток в 2 раза за каждый проход
    if predict_number == number:
       return count #количество попыток за одно решение
    elif predict_number > number:
       high = predict_number - 1  # делаем коррекцию на верхний край т.к. загаданное число меньше
    elif predict_number < number:
       low = predict_number + 1  # делаем коррекцию на нижний край т.к. загаданное число больше


#в домашней задании указано расчитать "метрику качества". Ниже приведет код от исходного задания из файла "game_v2" для расчета среднего количесва попыток из 1000 решений:
def score_game(guess_number) -> int:
    """За какое количество попыток в среднем из 1000 подходов угадывает наш алгоритм
    Args:
        random_predict ([type]): функция угадывания
    Returns:
        int: среднее количество попыток
    """

    count_ls = [] # список для сохранения количества попыток
    np.random.seed(1) # фиксируем сид для воспроизводимости
    random_array = np.random.randint(1, 101, size=(1000)) # загадали список чисел

    for number in random_array:
        count_ls.append(guess_number(number, num_start, num_stop))

    score = int(np.mean(count_ls)) # находим среднее количество попыток

    print(f'Этот алгоритм угадывает число в среднем за: {score} попыток')
    return(score)


# RUN
if __name__ == '__main__':
    score_game(guess_number)